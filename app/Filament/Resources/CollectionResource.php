<?php

namespace App\Filament\Resources;

use Filament\Forms\Form;
use Filament\Forms\Components\Component; // Base class for components
use Filament\Forms\Get; // For the closure
use Lunar\Admin\Filament\Resources\CollectionResource as BaseCollectionResource;
// It's important to use the correct Collection model, usually Lunar's own unless you've extended it.
use Lunar\Models\Collection as LunarCollection;
use Illuminate\Database\Eloquent\Model;

class CollectionResource extends BaseCollectionResource
{
    public static function form(Form $form): Form
    {
        return parent::form($form) // Get the form with all parent configurations
            ->mutateRecursive(function (Component $component, Get $get, ?Model $record) {
                // The name of the field generated by Lunar's Attributes component for an attribute
                // with handle 'geslib-code' is typically just 'geslib-code'.
                if ($component->getName() === 'geslib-code') {
                    $component->hidden(
                        // The closure for hidden() receives the $record and $get utility.
                        // We can simplify the closure to just use $record directly.
                        static function (?Model $record) use ($get): bool {
                            // $record is the current Eloquent model being edited/created.
                            if (!$record || !$record instanceof LunarCollection) {
                                // If it's a new record ($record might be null or an empty model instance),
                                // we might not be able to determine the group yet.
                                // The behavior here depends on whether "featured" can be set on creation
                                // and if the attribute should be hidden even before a group is selected.
                                // Assuming we only hide on existing records that *have* the group.
                                // Or, if the group_id is already set on a new record via $get('collection_group_id')
                                return false;
                            }

                            // Accessing the collection group:
                            // $record should be an instance of LunarCollection.
                            // We assume it has a relationship named 'group' which points to a model
                            // (e.g., CollectionGroup) that has a 'handle' attribute.

                            // Ensure the 'group' relationship is loaded if it's lazy-loaded by default.
                            // However, in Filament forms, relationships used for conditions are often
                            // expected to be eager-loaded or loaded on demand.
                            // $record->loadMissing('group'); // Could be used, but might cause N+1 if not careful.

                            $collectionGroup = null;
                            if ($record->relationLoaded('group')) {
                                $collectionGroup = $record->group;
                            } else {
                                // If not loaded, and if the foreign key is directly on the collection:
                                if ($record->collection_group_id) {
                                     // This would require fetching the group if not already available.
                                     // For simplicity in a conditional hide, it's better if 'group' is eager loaded
                                     // or if we can rely on $get('collection_group_id') and then check the handle
                                     // from a list or another source if the full group model isn't needed.
                                     // Let's assume $record->group is available or can be accessed.
                                     // If $record->group is null (no group assigned), it won't match 'featured'.
                                     $collectionGroup = $record->group; // Accesses the relationship
                                }
                            }

                            if ($collectionGroup && $collectionGroup->handle === 'featured') {
                                return true; // Hide if group is 'featured'
                            }

                            return false; // Otherwise, show the field
                        }
                    );
                }
                return $component; // Return the component, modified or not
            });
    }
}
